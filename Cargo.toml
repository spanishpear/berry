[workspace]
members  = ["crates/*"]
resolver = "2"

  [workspace.package]
  authors    = ["Shrey Somaiya"]
  categories = ["parsing", "parser-implementations"]
  # description = "A simple yarn berry lockfile parser"
  edition = "2024"
  version = "0.2.0"
  # keywords = [
  #   "yarn",
  #   "berry",
  #   "lockfile",
  #   "parser",
  #   "utils",
  #   "nodejs",
  #   "napi",
  #   "n-api",
  # ]
  license = "MIT OR Apache-2.0"
  # name = "berry"
  repository = "https://github.com/spanishpear/berry"
  # version = "0.1.0"

  [workspace.dependencies]
  berry-core = { path = "crates/berry-core" }
  berry-test = { path = "crates/berry-test" }
  # https://nodejs.org/api/n-api.html#node-api-version-matrix
  # support node 18-22
  clap = { version = "4.5.45", features = ["derive"] }
  criterion = { version = "0.7", features = ["html_reports"] }
  memory-stats = { version = "1.2.0" }
  napi = { version = "3.2.4", default-features = false, features = ["napi9"] }
  napi-derive = { version = "3.2.4", default-features = false, features = [
    "type-def",
  ] }
  nom = { version = "8.0.0" }
  rstest = { version = "0.26" }
  serde = { version = "1.0", features = ["derive"] }
  serde_json = { version = "1.0" }

  # https://doc.rust-lang.org/rustc/lints/groups.html
  [workspace.lints.rust]
  deprecated-safe         = "warn"
  future-incompatible     = "warn"
  keyword-idents          = "warn"
  let-underscore          = "warn"
  nonstandard-style       = "warn"
  refining-impl-trait     = "warn"
  rust-2024-compatibility = "warn"
  unused                  = "warn"
  warnings                = "warn"

  # https://github.com/rust-lang/rust-clippy/?tab=readme-ov-file#clippy
  [workspace.lints.clippy]
  # set all the lints to warn - will fail in CI
  # Other categories are default warn, so are not listed
  all      = { level = "warn", priority = -1 } # default is "warn/deny", as it contains multiple groups
  cargo    = { level = "warn", priority = -1 } # default is "allow"
  nursery  = { level = "warn", priority = -1 } # default is "allow"
  pedantic = { level = "warn", priority = -1 } # default is "allow"
  # Now, allow ones we want to ignore
  cargo_common_metadata = "allow"
  cast_precision_loss   = "allow" # not super important right now
  implicit_return       = "allow" # Prefer idiomatic rust
  missing_const_for_fn  = "allow"
  missing_errors_doc    = "allow"
  missing_panics_doc    = "allow"
  must_use_candidate    = "allow"

[profile.release]
codegen-units = 1
lto           = true
strip         = "symbols"
